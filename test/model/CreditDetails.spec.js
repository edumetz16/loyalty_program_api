/**
 * Loyalty Program API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.0.2
 * Contact: eduardo@linead.com.ar
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.16
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LoyaltyProgramApi);
  }
}(this, function(expect, LoyaltyProgramApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LoyaltyProgramApi.CreditDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CreditDetails', function() {
    it('should create an instance of CreditDetails', function() {
      // uncomment below and update the code to test CreditDetails
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be.a(LoyaltyProgramApi.CreditDetails);
    });

    it('should have the property pk (base name: "pk")', function() {
      // uncomment below and update the code to test the property pk
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property importe (base name: "importe")', function() {
      // uncomment below and update the code to test the property importe
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property fkSocio (base name: "fk_socio")', function() {
      // uncomment below and update the code to test the property fkSocio
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property cuotas (base name: "cuotas")', function() {
      // uncomment below and update the code to test the property cuotas
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property observaciones (base name: "observaciones")', function() {
      // uncomment below and update the code to test the property observaciones
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property fechaCarga (base name: "fechaCarga")', function() {
      // uncomment below and update the code to test the property fechaCarga
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property usuario (base name: "usuario")', function() {
      // uncomment below and update the code to test the property usuario
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property valorCuota (base name: "valorCuota")', function() {
      // uncomment below and update the code to test the property valorCuota
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property vencimientoPrimerCuota (base name: "vencimientoPrimerCuota")', function() {
      // uncomment below and update the code to test the property vencimientoPrimerCuota
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property estado (base name: "estado")', function() {
      // uncomment below and update the code to test the property estado
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property instancias (base name: "instancias")', function() {
      // uncomment below and update the code to test the property instancias
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property ultimaCuota (base name: "ultimaCuota")', function() {
      // uncomment below and update the code to test the property ultimaCuota
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property proximaCuota (base name: "proximaCuota")', function() {
      // uncomment below and update the code to test the property proximaCuota
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property saldo (base name: "saldo")', function() {
      // uncomment below and update the code to test the property saldo
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property valorProximaCuota (base name: "valorProximaCuota")', function() {
      // uncomment below and update the code to test the property valorProximaCuota
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

    it('should have the property montoEntregado (base name: "montoEntregado")', function() {
      // uncomment below and update the code to test the property montoEntregado
      //var instane = new LoyaltyProgramApi.CreditDetails();
      //expect(instance).to.be();
    });

  });

}));
