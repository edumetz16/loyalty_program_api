/**
 * Loyalty Program API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.0.2
 * Contact: eduardo@linead.com.ar
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.16
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LoyaltyProgramApi);
  }
}(this, function(expect, LoyaltyProgramApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LoyaltyProgramApi.DevelopersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DevelopersApi', function() {
    describe('associateFCMId', function() {
      it('should call associateFCMId successfully', function(done) {
        //uncomment below and update the code to test associateFCMId
        //instance.associateFCMId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('buildPrize', function() {
      it('should call buildPrize successfully', function(done) {
        //uncomment below and update the code to test buildPrize
        //instance.buildPrize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changeInfo', function() {
      it('should call changeInfo successfully', function(done) {
        //uncomment below and update the code to test changeInfo
        //instance.changeInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changePassword', function() {
      it('should call changePassword successfully', function(done) {
        //uncomment below and update the code to test changePassword
        //instance.changePassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkUser', function() {
      it('should call checkUser successfully', function(done) {
        //uncomment below and update the code to test checkUser
        //instance.checkUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkUser2', function() {
      it('should call checkUser2 successfully', function(done) {
        //uncomment below and update the code to test checkUser2
        //instance.checkUser2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkUserMail', function() {
      it('should call checkUserMail successfully', function(done) {
        //uncomment below and update the code to test checkUserMail
        //instance.checkUserMail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contactForm', function() {
      it('should call contactForm successfully', function(done) {
        //uncomment below and update the code to test contactForm
        //instance.contactForm(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('dettachFMCId', function() {
      it('should call dettachFMCId successfully', function(done) {
        //uncomment below and update the code to test dettachFMCId
        //instance.dettachFMCId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCategories', function() {
      it('should call getCategories successfully', function(done) {
        //uncomment below and update the code to test getCategories
        //instance.getCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCities', function() {
      it('should call getCities successfully', function(done) {
        //uncomment below and update the code to test getCities
        //instance.getCities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCredits', function() {
      it('should call getCredits successfully', function(done) {
        //uncomment below and update the code to test getCredits
        //instance.getCredits(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCreditsDetails', function() {
      it('should call getCreditsDetails successfully', function(done) {
        //uncomment below and update the code to test getCreditsDetails
        //instance.getCreditsDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExchangeTicket', function() {
      it('should call getExchangeTicket successfully', function(done) {
        //uncomment below and update the code to test getExchangeTicket
        //instance.getExchangeTicket(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMiles', function() {
      it('should call getMiles successfully', function(done) {
        //uncomment below and update the code to test getMiles
        //instance.getMiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMilesDetails', function() {
      it('should call getMilesDetails successfully', function(done) {
        //uncomment below and update the code to test getMilesDetails
        //instance.getMilesDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getModules', function() {
      it('should call getModules successfully', function(done) {
        //uncomment below and update the code to test getModules
        //instance.getModules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNews', function() {
      it('should call getNews successfully', function(done) {
        //uncomment below and update the code to test getNews
        //instance.getNews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNewsDetails', function() {
      it('should call getNewsDetails successfully', function(done) {
        //uncomment below and update the code to test getNewsDetails
        //instance.getNewsDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNewsList', function() {
      it('should call getNewsList successfully', function(done) {
        //uncomment below and update the code to test getNewsList
        //instance.getNewsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNewsWithTag', function() {
      it('should call getNewsWithTag successfully', function(done) {
        //uncomment below and update the code to test getNewsWithTag
        //instance.getNewsWithTag(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNewsWithUser', function() {
      it('should call getNewsWithUser successfully', function(done) {
        //uncomment below and update the code to test getNewsWithUser
        //instance.getNewsWithUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPoints', function() {
      it('should call getPoints successfully', function(done) {
        //uncomment below and update the code to test getPoints
        //instance.getPoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPointsDetails', function() {
      it('should call getPointsDetails successfully', function(done) {
        //uncomment below and update the code to test getPointsDetails
        //instance.getPointsDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPrizesFromCategory', function() {
      it('should call getPrizesFromCategory successfully', function(done) {
        //uncomment below and update the code to test getPrizesFromCategory
        //instance.getPrizesFromCategory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProvinces', function() {
      it('should call getProvinces successfully', function(done) {
        //uncomment below and update the code to test getProvinces
        //instance.getProvinces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRedemptions', function() {
      it('should call getRedemptions successfully', function(done) {
        //uncomment below and update the code to test getRedemptions
        //instance.getRedemptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSliderImages', function() {
      it('should call getSliderImages successfully', function(done) {
        //uncomment below and update the code to test getSliderImages
        //instance.getSliderImages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubsidiaries', function() {
      it('should call getSubsidiaries successfully', function(done) {
        //uncomment below and update the code to test getSubsidiaries
        //instance.getSubsidiaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubsidiariesCitymarketing', function() {
      it('should call getSubsidiariesCitymarketing successfully', function(done) {
        //uncomment below and update the code to test getSubsidiariesCitymarketing
        //instance.getSubsidiariesCitymarketing(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSubsidiariesList', function() {
      it('should call getSubsidiariesList successfully', function(done) {
        //uncomment below and update the code to test getSubsidiariesList
        //instance.getSubsidiariesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSweepstakeDetails', function() {
      it('should call getSweepstakeDetails successfully', function(done) {
        //uncomment below and update the code to test getSweepstakeDetails
        //instance.getSweepstakeDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSweepstakes', function() {
      it('should call getSweepstakes successfully', function(done) {
        //uncomment below and update the code to test getSweepstakes
        //instance.getSweepstakes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTagsWithUser', function() {
      it('should call getTagsWithUser successfully', function(done) {
        //uncomment below and update the code to test getTagsWithUser
        //instance.getTagsWithUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUnreadNews', function() {
      it('should call getUnreadNews successfully', function(done) {
        //uncomment below and update the code to test getUnreadNews
        //instance.getUnreadNews(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserInfo', function() {
      it('should call getUserInfo successfully', function(done) {
        //uncomment below and update the code to test getUserInfo
        //instance.getUserInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVouchers', function() {
      it('should call getVouchers successfully', function(done) {
        //uncomment below and update the code to test getVouchers
        //instance.getVouchers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('joinSweepstake', function() {
      it('should call joinSweepstake successfully', function(done) {
        //uncomment below and update the code to test joinSweepstake
        //instance.joinSweepstake(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('loginUser', function() {
      it('should call loginUser successfully', function(done) {
        //uncomment below and update the code to test loginUser
        //instance.loginUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('prizePaymentDetails', function() {
      it('should call prizePaymentDetails successfully', function(done) {
        //uncomment below and update the code to test prizePaymentDetails
        //instance.prizePaymentDetails(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('recoverPassword', function() {
      it('should call recoverPassword successfully', function(done) {
        //uncomment below and update the code to test recoverPassword
        //instance.recoverPassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('redeemVoucher', function() {
      it('should call redeemVoucher successfully', function(done) {
        //uncomment below and update the code to test redeemVoucher
        //instance.redeemVoucher(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerFCMId', function() {
      it('should call registerFCMId successfully', function(done) {
        //uncomment below and update the code to test registerFCMId
        //instance.registerFCMId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerPrizeVisit', function() {
      it('should call registerPrizeVisit successfully', function(done) {
        //uncomment below and update the code to test registerPrizeVisit
        //instance.registerPrizeVisit(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerUser', function() {
      it('should call registerUser successfully', function(done) {
        //uncomment below and update the code to test registerUser
        //instance.registerUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reservePrize', function() {
      it('should call reservePrize successfully', function(done) {
        //uncomment below and update the code to test reservePrize
        //instance.reservePrize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setUserEmail', function() {
      it('should call setUserEmail successfully', function(done) {
        //uncomment below and update the code to test setUserEmail
        //instance.setUserEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
