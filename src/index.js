/**
 * Loyalty Program API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.0.2
 * Contact: eduardo@linead.com.ar
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 1.0.16
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Card', 'model/CategoryRequest', 'model/ChangeInformationResponse', 'model/ChangeInformationResponsev2', 'model/ChangeInformationResponsev2message', 'model/ChangePassword', 'model/City', 'model/CityLocations', 'model/ClubRequest', 'model/ClubUserRequest', 'model/ClubUserbyIDRequest', 'model/ContactForm', 'model/ContactResponse', 'model/Credit', 'model/CreditDetails', 'model/CreditInstance', 'model/CreditsResponse', 'model/DeviceInfo', 'model/EmailVoucher', 'model/Exchange', 'model/ExchangeId', 'model/Exchanges', 'model/LoginResponse', 'model/Modules', 'model/NewsDetail', 'model/NewsImages', 'model/NewsItem', 'model/NewsRequest', 'model/NewsTags', 'model/NewsUsers', 'model/ObjectRequest', 'model/PaymentDetails', 'model/Points', 'model/Premios', 'model/Prize', 'model/PrizeContent', 'model/PrizeRedeemRequest', 'model/PrizeRequest', 'model/PrizeViewRequest', 'model/Province', 'model/Redemption', 'model/RedemptionConfirm', 'model/Redemptions', 'model/RedemptionsRequest', 'model/Respuesta', 'model/Rubro', 'model/Rubros', 'model/SliderImages', 'model/Step', 'model/Subsidiaries', 'model/SubsidiariesCitymarketing', 'model/Subsidiary', 'model/SubsidiaryLocation', 'model/SubsidiaryPremio', 'model/Sweepstake', 'model/SweepstakeDetails', 'model/SweepstakeUser', 'model/SweepstakeUserResponse', 'model/Sweepstakes', 'model/TagRequest', 'model/TaggedUser', 'model/Ticket', 'model/TicketResponse', 'model/UrlImagenes', 'model/User', 'model/UserCheckResponse', 'model/UserDeviceInfo', 'model/UserInformation', 'model/UserLoginRequest', 'model/UserNews', 'model/ValidateMailRequest', 'model/ValidateMailResponse', 'model/Voucher', 'model/VoucherRedemptionCode', 'model/Vouchers', 'api/DevelopersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Card'), require('./model/CategoryRequest'), require('./model/ChangeInformationResponse'), require('./model/ChangeInformationResponsev2'), require('./model/ChangeInformationResponsev2message'), require('./model/ChangePassword'), require('./model/City'), require('./model/CityLocations'), require('./model/ClubRequest'), require('./model/ClubUserRequest'), require('./model/ClubUserbyIDRequest'), require('./model/ContactForm'), require('./model/ContactResponse'), require('./model/Credit'), require('./model/CreditDetails'), require('./model/CreditInstance'), require('./model/CreditsResponse'), require('./model/DeviceInfo'), require('./model/EmailVoucher'), require('./model/Exchange'), require('./model/ExchangeId'), require('./model/Exchanges'), require('./model/LoginResponse'), require('./model/Modules'), require('./model/NewsDetail'), require('./model/NewsImages'), require('./model/NewsItem'), require('./model/NewsRequest'), require('./model/NewsTags'), require('./model/NewsUsers'), require('./model/ObjectRequest'), require('./model/PaymentDetails'), require('./model/Points'), require('./model/Premios'), require('./model/Prize'), require('./model/PrizeContent'), require('./model/PrizeRedeemRequest'), require('./model/PrizeRequest'), require('./model/PrizeViewRequest'), require('./model/Province'), require('./model/Redemption'), require('./model/RedemptionConfirm'), require('./model/Redemptions'), require('./model/RedemptionsRequest'), require('./model/Respuesta'), require('./model/Rubro'), require('./model/Rubros'), require('./model/SliderImages'), require('./model/Step'), require('./model/Subsidiaries'), require('./model/SubsidiariesCitymarketing'), require('./model/Subsidiary'), require('./model/SubsidiaryLocation'), require('./model/SubsidiaryPremio'), require('./model/Sweepstake'), require('./model/SweepstakeDetails'), require('./model/SweepstakeUser'), require('./model/SweepstakeUserResponse'), require('./model/Sweepstakes'), require('./model/TagRequest'), require('./model/TaggedUser'), require('./model/Ticket'), require('./model/TicketResponse'), require('./model/UrlImagenes'), require('./model/User'), require('./model/UserCheckResponse'), require('./model/UserDeviceInfo'), require('./model/UserInformation'), require('./model/UserLoginRequest'), require('./model/UserNews'), require('./model/ValidateMailRequest'), require('./model/ValidateMailResponse'), require('./model/Voucher'), require('./model/VoucherRedemptionCode'), require('./model/Vouchers'), require('./api/DevelopersApi'));
  }
}(function(ApiClient, Card, CategoryRequest, ChangeInformationResponse, ChangeInformationResponsev2, ChangeInformationResponsev2message, ChangePassword, City, CityLocations, ClubRequest, ClubUserRequest, ClubUserbyIDRequest, ContactForm, ContactResponse, Credit, CreditDetails, CreditInstance, CreditsResponse, DeviceInfo, EmailVoucher, Exchange, ExchangeId, Exchanges, LoginResponse, Modules, NewsDetail, NewsImages, NewsItem, NewsRequest, NewsTags, NewsUsers, ObjectRequest, PaymentDetails, Points, Premios, Prize, PrizeContent, PrizeRedeemRequest, PrizeRequest, PrizeViewRequest, Province, Redemption, RedemptionConfirm, Redemptions, RedemptionsRequest, Respuesta, Rubro, Rubros, SliderImages, Step, Subsidiaries, SubsidiariesCitymarketing, Subsidiary, SubsidiaryLocation, SubsidiaryPremio, Sweepstake, SweepstakeDetails, SweepstakeUser, SweepstakeUserResponse, Sweepstakes, TagRequest, TaggedUser, Ticket, TicketResponse, UrlImagenes, User, UserCheckResponse, UserDeviceInfo, UserInformation, UserLoginRequest, UserNews, ValidateMailRequest, ValidateMailResponse, Voucher, VoucherRedemptionCode, Vouchers, DevelopersApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var LoyaltyProgramApi = require('index'); // See note below*.
   * var xxxSvc = new LoyaltyProgramApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new LoyaltyProgramApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new LoyaltyProgramApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new LoyaltyProgramApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 4.0.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Card model constructor.
     * @property {module:model/Card}
     */
    Card: Card,
    /**
     * The CategoryRequest model constructor.
     * @property {module:model/CategoryRequest}
     */
    CategoryRequest: CategoryRequest,
    /**
     * The ChangeInformationResponse model constructor.
     * @property {module:model/ChangeInformationResponse}
     */
    ChangeInformationResponse: ChangeInformationResponse,
    /**
     * The ChangeInformationResponsev2 model constructor.
     * @property {module:model/ChangeInformationResponsev2}
     */
    ChangeInformationResponsev2: ChangeInformationResponsev2,
    /**
     * The ChangeInformationResponsev2message model constructor.
     * @property {module:model/ChangeInformationResponsev2message}
     */
    ChangeInformationResponsev2message: ChangeInformationResponsev2message,
    /**
     * The ChangePassword model constructor.
     * @property {module:model/ChangePassword}
     */
    ChangePassword: ChangePassword,
    /**
     * The City model constructor.
     * @property {module:model/City}
     */
    City: City,
    /**
     * The CityLocations model constructor.
     * @property {module:model/CityLocations}
     */
    CityLocations: CityLocations,
    /**
     * The ClubRequest model constructor.
     * @property {module:model/ClubRequest}
     */
    ClubRequest: ClubRequest,
    /**
     * The ClubUserRequest model constructor.
     * @property {module:model/ClubUserRequest}
     */
    ClubUserRequest: ClubUserRequest,
    /**
     * The ClubUserbyIDRequest model constructor.
     * @property {module:model/ClubUserbyIDRequest}
     */
    ClubUserbyIDRequest: ClubUserbyIDRequest,
    /**
     * The ContactForm model constructor.
     * @property {module:model/ContactForm}
     */
    ContactForm: ContactForm,
    /**
     * The ContactResponse model constructor.
     * @property {module:model/ContactResponse}
     */
    ContactResponse: ContactResponse,
    /**
     * The Credit model constructor.
     * @property {module:model/Credit}
     */
    Credit: Credit,
    /**
     * The CreditDetails model constructor.
     * @property {module:model/CreditDetails}
     */
    CreditDetails: CreditDetails,
    /**
     * The CreditInstance model constructor.
     * @property {module:model/CreditInstance}
     */
    CreditInstance: CreditInstance,
    /**
     * The CreditsResponse model constructor.
     * @property {module:model/CreditsResponse}
     */
    CreditsResponse: CreditsResponse,
    /**
     * The DeviceInfo model constructor.
     * @property {module:model/DeviceInfo}
     */
    DeviceInfo: DeviceInfo,
    /**
     * The EmailVoucher model constructor.
     * @property {module:model/EmailVoucher}
     */
    EmailVoucher: EmailVoucher,
    /**
     * The Exchange model constructor.
     * @property {module:model/Exchange}
     */
    Exchange: Exchange,
    /**
     * The ExchangeId model constructor.
     * @property {module:model/ExchangeId}
     */
    ExchangeId: ExchangeId,
    /**
     * The Exchanges model constructor.
     * @property {module:model/Exchanges}
     */
    Exchanges: Exchanges,
    /**
     * The LoginResponse model constructor.
     * @property {module:model/LoginResponse}
     */
    LoginResponse: LoginResponse,
    /**
     * The Modules model constructor.
     * @property {module:model/Modules}
     */
    Modules: Modules,
    /**
     * The NewsDetail model constructor.
     * @property {module:model/NewsDetail}
     */
    NewsDetail: NewsDetail,
    /**
     * The NewsImages model constructor.
     * @property {module:model/NewsImages}
     */
    NewsImages: NewsImages,
    /**
     * The NewsItem model constructor.
     * @property {module:model/NewsItem}
     */
    NewsItem: NewsItem,
    /**
     * The NewsRequest model constructor.
     * @property {module:model/NewsRequest}
     */
    NewsRequest: NewsRequest,
    /**
     * The NewsTags model constructor.
     * @property {module:model/NewsTags}
     */
    NewsTags: NewsTags,
    /**
     * The NewsUsers model constructor.
     * @property {module:model/NewsUsers}
     */
    NewsUsers: NewsUsers,
    /**
     * The ObjectRequest model constructor.
     * @property {module:model/ObjectRequest}
     */
    ObjectRequest: ObjectRequest,
    /**
     * The PaymentDetails model constructor.
     * @property {module:model/PaymentDetails}
     */
    PaymentDetails: PaymentDetails,
    /**
     * The Points model constructor.
     * @property {module:model/Points}
     */
    Points: Points,
    /**
     * The Premios model constructor.
     * @property {module:model/Premios}
     */
    Premios: Premios,
    /**
     * The Prize model constructor.
     * @property {module:model/Prize}
     */
    Prize: Prize,
    /**
     * The PrizeContent model constructor.
     * @property {module:model/PrizeContent}
     */
    PrizeContent: PrizeContent,
    /**
     * The PrizeRedeemRequest model constructor.
     * @property {module:model/PrizeRedeemRequest}
     */
    PrizeRedeemRequest: PrizeRedeemRequest,
    /**
     * The PrizeRequest model constructor.
     * @property {module:model/PrizeRequest}
     */
    PrizeRequest: PrizeRequest,
    /**
     * The PrizeViewRequest model constructor.
     * @property {module:model/PrizeViewRequest}
     */
    PrizeViewRequest: PrizeViewRequest,
    /**
     * The Province model constructor.
     * @property {module:model/Province}
     */
    Province: Province,
    /**
     * The Redemption model constructor.
     * @property {module:model/Redemption}
     */
    Redemption: Redemption,
    /**
     * The RedemptionConfirm model constructor.
     * @property {module:model/RedemptionConfirm}
     */
    RedemptionConfirm: RedemptionConfirm,
    /**
     * The Redemptions model constructor.
     * @property {module:model/Redemptions}
     */
    Redemptions: Redemptions,
    /**
     * The RedemptionsRequest model constructor.
     * @property {module:model/RedemptionsRequest}
     */
    RedemptionsRequest: RedemptionsRequest,
    /**
     * The Respuesta model constructor.
     * @property {module:model/Respuesta}
     */
    Respuesta: Respuesta,
    /**
     * The Rubro model constructor.
     * @property {module:model/Rubro}
     */
    Rubro: Rubro,
    /**
     * The Rubros model constructor.
     * @property {module:model/Rubros}
     */
    Rubros: Rubros,
    /**
     * The SliderImages model constructor.
     * @property {module:model/SliderImages}
     */
    SliderImages: SliderImages,
    /**
     * The Step model constructor.
     * @property {module:model/Step}
     */
    Step: Step,
    /**
     * The Subsidiaries model constructor.
     * @property {module:model/Subsidiaries}
     */
    Subsidiaries: Subsidiaries,
    /**
     * The SubsidiariesCitymarketing model constructor.
     * @property {module:model/SubsidiariesCitymarketing}
     */
    SubsidiariesCitymarketing: SubsidiariesCitymarketing,
    /**
     * The Subsidiary model constructor.
     * @property {module:model/Subsidiary}
     */
    Subsidiary: Subsidiary,
    /**
     * The SubsidiaryLocation model constructor.
     * @property {module:model/SubsidiaryLocation}
     */
    SubsidiaryLocation: SubsidiaryLocation,
    /**
     * The SubsidiaryPremio model constructor.
     * @property {module:model/SubsidiaryPremio}
     */
    SubsidiaryPremio: SubsidiaryPremio,
    /**
     * The Sweepstake model constructor.
     * @property {module:model/Sweepstake}
     */
    Sweepstake: Sweepstake,
    /**
     * The SweepstakeDetails model constructor.
     * @property {module:model/SweepstakeDetails}
     */
    SweepstakeDetails: SweepstakeDetails,
    /**
     * The SweepstakeUser model constructor.
     * @property {module:model/SweepstakeUser}
     */
    SweepstakeUser: SweepstakeUser,
    /**
     * The SweepstakeUserResponse model constructor.
     * @property {module:model/SweepstakeUserResponse}
     */
    SweepstakeUserResponse: SweepstakeUserResponse,
    /**
     * The Sweepstakes model constructor.
     * @property {module:model/Sweepstakes}
     */
    Sweepstakes: Sweepstakes,
    /**
     * The TagRequest model constructor.
     * @property {module:model/TagRequest}
     */
    TagRequest: TagRequest,
    /**
     * The TaggedUser model constructor.
     * @property {module:model/TaggedUser}
     */
    TaggedUser: TaggedUser,
    /**
     * The Ticket model constructor.
     * @property {module:model/Ticket}
     */
    Ticket: Ticket,
    /**
     * The TicketResponse model constructor.
     * @property {module:model/TicketResponse}
     */
    TicketResponse: TicketResponse,
    /**
     * The UrlImagenes model constructor.
     * @property {module:model/UrlImagenes}
     */
    UrlImagenes: UrlImagenes,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserCheckResponse model constructor.
     * @property {module:model/UserCheckResponse}
     */
    UserCheckResponse: UserCheckResponse,
    /**
     * The UserDeviceInfo model constructor.
     * @property {module:model/UserDeviceInfo}
     */
    UserDeviceInfo: UserDeviceInfo,
    /**
     * The UserInformation model constructor.
     * @property {module:model/UserInformation}
     */
    UserInformation: UserInformation,
    /**
     * The UserLoginRequest model constructor.
     * @property {module:model/UserLoginRequest}
     */
    UserLoginRequest: UserLoginRequest,
    /**
     * The UserNews model constructor.
     * @property {module:model/UserNews}
     */
    UserNews: UserNews,
    /**
     * The ValidateMailRequest model constructor.
     * @property {module:model/ValidateMailRequest}
     */
    ValidateMailRequest: ValidateMailRequest,
    /**
     * The ValidateMailResponse model constructor.
     * @property {module:model/ValidateMailResponse}
     */
    ValidateMailResponse: ValidateMailResponse,
    /**
     * The Voucher model constructor.
     * @property {module:model/Voucher}
     */
    Voucher: Voucher,
    /**
     * The VoucherRedemptionCode model constructor.
     * @property {module:model/VoucherRedemptionCode}
     */
    VoucherRedemptionCode: VoucherRedemptionCode,
    /**
     * The Vouchers model constructor.
     * @property {module:model/Vouchers}
     */
    Vouchers: Vouchers,
    /**
     * The DevelopersApi service constructor.
     * @property {module:api/DevelopersApi}
     */
    DevelopersApi: DevelopersApi
  };

  return exports;
}));
